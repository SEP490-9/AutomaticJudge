package judge;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Nguyen Vuong Khang Hy Email: khanghy3004@gmail.com Automatic Judger
 */
public class frmSetting extends javax.swing.JFrame {

    frmJudge parent;

    /**
     * Creates new form frmSetting
     *
     * @param parent main frame
     */
    public frmSetting(frmJudge parent) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/btnsettings.png")));
        this.parent = parent;

//        txtNopbaiPath.setText(parent.folderNopbaiPath);
//        if (parent.checkFunction) {
//            chkCheckFormat.setSelected(true);
//        }
        if (parent.checkFormat) {
            chkCheckFormat.setSelected(true);
        }
        if (parent.checkCmt) {
            chkCheckCmt.setSelected(true);
        }
        if (parent.checkWall) {
            chkCheckPlagiarism.setSelected(true);
        }
        txtTimeLimit.setText(String.valueOf(parent.timeLimit));
        txtMemoryLimit.setText(String.valueOf(parent.memoryLimit));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOk = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        chkCheckFormat = new javax.swing.JCheckBox();
        txtTimeLimit = new javax.swing.JTextField();
        lblTimeLimit = new javax.swing.JLabel();
        lblMemoryLimit = new javax.swing.JLabel();
        txtMemoryLimit = new javax.swing.JTextField();
        chkCheckPlagiarism = new javax.swing.JCheckBox();
        pnlSettingCheckCmt = new javax.swing.JPanel();
        cbbCommentMode = new javax.swing.JComboBox<>();
        txtPercentageAccept = new javax.swing.JTextField();
        txtMinusValue = new javax.swing.JTextField();
        lblPercentageAccept = new javax.swing.JLabel();
        lblMinusPoints = new javax.swing.JLabel();
        pnlSettingCheckPlagiarism = new javax.swing.JPanel();
        txtPercentagePlaAccept = new javax.swing.JTextField();
        lblPercentagePlaAccept = new javax.swing.JLabel();
        chkCheckCmt = new javax.swing.JCheckBox();
        pnlSettingCheckFormat = new javax.swing.JPanel();
        txtFormatMinusValue = new javax.swing.JTextField();
        lblFormatMinusValue = new javax.swing.JLabel();
        pnlPenaltyMode = new javax.swing.JPanel();
        cbbPenaltyMode = new javax.swing.JComboBox<>();
        lblLitmitSubmission = new javax.swing.JLabel();
        txtLimitSubmission = new javax.swing.JTextField();

        setTitle("Setting");
        setMaximumSize(new java.awt.Dimension(550, 2147483647));
        setMinimumSize(new java.awt.Dimension(550, 0));
        setName("frmSetting"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnOk.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnOk.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnCheck.png"))); // NOI18N
        btnOk.setText("Accept");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/btnCross.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        chkCheckFormat.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkCheckFormat.setText("Check Format");
        chkCheckFormat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCheckFormatActionPerformed(evt);
            }
        });

        txtTimeLimit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lblTimeLimit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTimeLimit.setText("Time Limit (ms):");

        lblMemoryLimit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMemoryLimit.setText("Memory Limit (MB):");

        txtMemoryLimit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        chkCheckPlagiarism.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkCheckPlagiarism.setText("Check Plagiarism");
        chkCheckPlagiarism.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCheckPlagiarismActionPerformed(evt);
            }
        });

        pnlSettingCheckCmt.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.white));

        cbbCommentMode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbbCommentMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fixed", "By Percentage" }));
        cbbCommentMode.setBorder(null);
        cbbCommentMode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbCommentModeItemStateChanged(evt);
            }
        });

        txtPercentageAccept.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPercentageAccept.setMaximumSize(new java.awt.Dimension(6, 23));

        txtMinusValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtMinusValue.setMaximumSize(new java.awt.Dimension(6, 23));

        lblPercentageAccept.setText("Percentage Accept (%):");

        lblMinusPoints.setText("Minus Value:");

        javax.swing.GroupLayout pnlSettingCheckCmtLayout = new javax.swing.GroupLayout(pnlSettingCheckCmt);
        pnlSettingCheckCmt.setLayout(pnlSettingCheckCmtLayout);
        pnlSettingCheckCmtLayout.setHorizontalGroup(
            pnlSettingCheckCmtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSettingCheckCmtLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSettingCheckCmtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cbbCommentMode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPercentageAccept, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMinusPoints, javax.swing.GroupLayout.Alignment.LEADING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(pnlSettingCheckCmtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPercentageAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMinusValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        pnlSettingCheckCmtLayout.setVerticalGroup(
            pnlSettingCheckCmtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSettingCheckCmtLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbbCommentMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlSettingCheckCmtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPercentageAccept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPercentageAccept))
                .addGap(18, 18, 18)
                .addGroup(pnlSettingCheckCmtLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMinusValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMinusPoints))
                .addContainerGap())
        );

        pnlSettingCheckPlagiarism.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.white));
        pnlSettingCheckPlagiarism.setMaximumSize(new java.awt.Dimension(405, 94));
        pnlSettingCheckPlagiarism.setMinimumSize(new java.awt.Dimension(405, 94));
        pnlSettingCheckPlagiarism.setPreferredSize(new java.awt.Dimension(405, 94));

        txtPercentagePlaAccept.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtPercentagePlaAccept.setMaximumSize(new java.awt.Dimension(6, 23));

        lblPercentagePlaAccept.setText("Percentage Accept (%):");

        javax.swing.GroupLayout pnlSettingCheckPlagiarismLayout = new javax.swing.GroupLayout(pnlSettingCheckPlagiarism);
        pnlSettingCheckPlagiarism.setLayout(pnlSettingCheckPlagiarismLayout);
        pnlSettingCheckPlagiarismLayout.setHorizontalGroup(
            pnlSettingCheckPlagiarismLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSettingCheckPlagiarismLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPercentagePlaAccept)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtPercentagePlaAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSettingCheckPlagiarismLayout.setVerticalGroup(
            pnlSettingCheckPlagiarismLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSettingCheckPlagiarismLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlSettingCheckPlagiarismLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPercentagePlaAccept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPercentagePlaAccept))
                .addGap(54, 54, 54))
        );

        chkCheckCmt.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkCheckCmt.setText("Check Comment");
        chkCheckCmt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCheckCmtActionPerformed(evt);
            }
        });

        pnlSettingCheckFormat.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.lightGray, java.awt.Color.white));
        pnlSettingCheckFormat.setMaximumSize(new java.awt.Dimension(405, 94));
        pnlSettingCheckFormat.setMinimumSize(new java.awt.Dimension(405, 94));

        txtFormatMinusValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtFormatMinusValue.setMaximumSize(new java.awt.Dimension(6, 23));

        lblFormatMinusValue.setText("Minus Value (points):");

        javax.swing.GroupLayout pnlSettingCheckFormatLayout = new javax.swing.GroupLayout(pnlSettingCheckFormat);
        pnlSettingCheckFormat.setLayout(pnlSettingCheckFormatLayout);
        pnlSettingCheckFormatLayout.setHorizontalGroup(
            pnlSettingCheckFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSettingCheckFormatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFormatMinusValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtFormatMinusValue, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSettingCheckFormatLayout.setVerticalGroup(
            pnlSettingCheckFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSettingCheckFormatLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlSettingCheckFormatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFormatMinusValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFormatMinusValue))
                .addGap(54, 54, 54))
        );

        pnlPenaltyMode.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Penalty Mode", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        cbbPenaltyMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Easy", "Hard" }));
        cbbPenaltyMode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbPenaltyModeItemStateChanged(evt);
            }
        });

        lblLitmitSubmission.setText("Limit Submission:");

        txtLimitSubmission.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnlPenaltyModeLayout = new javax.swing.GroupLayout(pnlPenaltyMode);
        pnlPenaltyMode.setLayout(pnlPenaltyModeLayout);
        pnlPenaltyModeLayout.setHorizontalGroup(
            pnlPenaltyModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPenaltyModeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPenaltyModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPenaltyModeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cbbPenaltyMode, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlPenaltyModeLayout.createSequentialGroup()
                        .addComponent(lblLitmitSubmission)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtLimitSubmission, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlPenaltyModeLayout.setVerticalGroup(
            pnlPenaltyModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPenaltyModeLayout.createSequentialGroup()
                .addComponent(cbbPenaltyMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPenaltyModeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLitmitSubmission)
                    .addComponent(txtLimitSubmission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOk)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(chkCheckFormat)
                            .addComponent(chkCheckPlagiarism)
                            .addComponent(chkCheckCmt)
                            .addComponent(pnlSettingCheckPlagiarism, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                            .addComponent(pnlSettingCheckFormat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMemoryLimit)
                                    .addComponent(lblTimeLimit))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTimeLimit, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                                    .addComponent(txtMemoryLimit)))
                            .addComponent(pnlSettingCheckCmt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlPenaltyMode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 72, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTimeLimit)
                    .addComponent(txtTimeLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMemoryLimit)
                    .addComponent(txtMemoryLimit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkCheckFormat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSettingCheckFormat, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkCheckPlagiarism)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSettingCheckPlagiarism, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkCheckCmt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSettingCheckCmt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPenaltyMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOk)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * get config value from user and set to frmJudge NhanNT
     *
     * @param evt
     */
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed

        if ((chkCheckCmt.isSelected() && ("".equals(txtPercentageAccept.getText()) || "".equals(txtMinusValue.getText())) 
                || "".equals(txtMemoryLimit.getText()) || "".equals(txtTimeLimit.getText()))
                || (chkCheckFormat.isSelected() && "".equals(txtFormatMinusValue.getText()))
                || (chkCheckPlagiarism.isSelected() && "".equals(txtPercentagePlaAccept.getText()))
                || "".equals(txtLimitSubmission.getText())) {
            
            JOptionPane.showOptionDialog(this, "Please fill in  full information", "Message", 
                                        JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, null, null);
        } else {

            String selectedTab = parent.tabTable.getTitleAt(parent.tabTable.getSelectedIndex());
            String pathToSettingConfig = parent.problemDir + "\\" + selectedTab + "\\config.txt";

            File configFile = new File(pathToSettingConfig);
            try {
                //delete content of config file
                PrintWriter writer = new PrintWriter(configFile);
                writer.print("");
                writer.close();

                FileWriter fileWriter = new FileWriter(configFile);

                //write new content into config file
                fileWriter.write("time_limit=" + txtTimeLimit.getText() + "\n");
                fileWriter.write("memory_limit=" + txtMemoryLimit.getText() + "\n");
                
                fileWriter.write("check_format=" + chkCheckFormat.isSelected() + "\n");
                if (!chkCheckFormat.isSelected()) {
                    fileWriter.write(parent.props.getProperty("check_format_minusValue") + "\n");
                } else {
                    fileWriter.write(txtFormatMinusValue.getText() + "\n");
                }
                
                fileWriter.write("check_comment=" + chkCheckCmt.isSelected() + "\n");
                if (!chkCheckCmt.isSelected()) {
                    fileWriter.write("check_comment_mode=" + parent.props.getProperty("check_comment_mode") + "\n");
                    fileWriter.write(parent.props.getProperty("perentage_accept") + "\n");
                    fileWriter.write(parent.props.getProperty("minus_value") + "\n");
                } else {
                    fileWriter.write("check_comment_mode=" + cbbCommentMode.getSelectedItem() + "\n");
                    fileWriter.write(txtPercentageAccept.getText() + "\n");
                    fileWriter.write(txtMinusValue.getText() + "\n");
                }
                
                fileWriter.write("check_plagiarism=" + chkCheckPlagiarism.isSelected() + "\n");
                if (!chkCheckPlagiarism.isSelected()) {
                    fileWriter.write(parent.props.getProperty("check_plagiarism_perAccept") + "\n");
                } else {
                    fileWriter.write(txtPercentagePlaAccept.getText() + "\n");
                }

                fileWriter.write("penalty_mode=" + cbbPenaltyMode.getSelectedItem() + "\n");
                fileWriter.write(txtLimitSubmission.getText());
                
                fileWriter.close();
                setVisible(false);
                parent.btnSetting.setEnabled(true);
            } catch (IOException ex) {
                Logger.getLogger(frmSetting.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        setVisible(false);
        parent.btnSetting.setEnabled(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void chkCheckFormatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCheckFormatActionPerformed
        boolean isChecked = chkCheckFormat.isSelected();
        if (isChecked) {
            pnlSettingCheckFormat.setVisible(true);
        } else {
            pnlSettingCheckFormat.setVisible(false);
        }
        this.pack();
    }//GEN-LAST:event_chkCheckFormatActionPerformed

    private void chkCheckCmtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCheckCmtActionPerformed
        boolean isChecked = chkCheckCmt.isSelected();

        if (!isChecked) {
            pnlSettingCheckCmt.setVisible(false);
        } else {
            pnlSettingCheckCmt.setVisible(true);
        }
        this.pack();
    }//GEN-LAST:event_chkCheckCmtActionPerformed

    private void cbbCommentModeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbCommentModeItemStateChanged
        String selectedItem = cbbCommentMode.getSelectedItem().toString();
        if ("By Percentage".equals(selectedItem)) {
            lblMinusPoints.setText("Minus Points(%):");
        } else {
            lblMinusPoints.setText("Minus Points (points):");
        }
        txtPercentageAccept.setText("");
        txtMinusValue.setText("");
    }//GEN-LAST:event_cbbCommentModeItemStateChanged

    private void chkCheckPlagiarismActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCheckPlagiarismActionPerformed
        boolean isChecked = chkCheckPlagiarism.isSelected();
        if (isChecked) {
            pnlSettingCheckPlagiarism.setVisible(true);
        } else {
            pnlSettingCheckPlagiarism.setVisible(false);
        }
        this.pack();
    }//GEN-LAST:event_chkCheckPlagiarismActionPerformed

    private void cbbPenaltyModeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbPenaltyModeItemStateChanged
        String selectedItem = cbbPenaltyMode.getSelectedItem().toString();
        if ("Easy".equals(selectedItem)) {
            txtLimitSubmission.setEnabled(true);
        } else {
            txtLimitSubmission.setText("10");
            txtLimitSubmission.setEnabled(false);
        }
    }//GEN-LAST:event_cbbPenaltyModeItemStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        parent.btnSetting.setEnabled(true);
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    public javax.swing.JComboBox<String> cbbCommentMode;
    public javax.swing.JComboBox<String> cbbPenaltyMode;
    public javax.swing.JCheckBox chkCheckCmt;
    public javax.swing.JCheckBox chkCheckFormat;
    public javax.swing.JCheckBox chkCheckPlagiarism;
    public javax.swing.JLabel lblFormatMinusValue;
    private javax.swing.JLabel lblLitmitSubmission;
    private javax.swing.JLabel lblMemoryLimit;
    public javax.swing.JLabel lblMinusPoints;
    public javax.swing.JLabel lblPercentageAccept;
    public javax.swing.JLabel lblPercentagePlaAccept;
    private javax.swing.JLabel lblTimeLimit;
    public javax.swing.JPanel pnlPenaltyMode;
    public javax.swing.JPanel pnlSettingCheckCmt;
    public javax.swing.JPanel pnlSettingCheckFormat;
    public javax.swing.JPanel pnlSettingCheckPlagiarism;
    public javax.swing.JTextField txtFormatMinusValue;
    public javax.swing.JTextField txtLimitSubmission;
    public javax.swing.JTextField txtMemoryLimit;
    public javax.swing.JTextField txtMinusValue;
    public javax.swing.JTextField txtPercentageAccept;
    public javax.swing.JTextField txtPercentagePlaAccept;
    public javax.swing.JTextField txtTimeLimit;
    // End of variables declaration//GEN-END:variables
}
